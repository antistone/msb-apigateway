#
# Copyright (C) 2018 ZTE, Inc. and others. All rights reserved. (ZTE)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
location = /admin/microservices/v1/status/connection {
    access_log off;
    content_by_lua_block{
        if ngx.req.get_method() == "GET" then
        	ngx.print(stats.format_conn_status())
        else
        	ngx.status = ngx.HTTP_NOT_FOUND
            ngx.say("request method not supported!")
            return ngx.exit(ngx.status)
        end
    }
}
location = /admin/microservices/v1/status/request {
    access_log off;
    content_by_lua_block{
        if ngx.req.get_method() == "GET" then
        	ngx.print(stats.format_req_status())
        else
        	ngx.status = ngx.HTTP_NOT_FOUND
            ngx.say("request method not supported!")
            return ngx.exit(ngx.status)
        end
    }
}
location = /admin/microservices/v1/statistics/request {
    access_log off;
    content_by_lua_block{
        if ngx.req.get_method() == "GET" then
			--if input latestNum is empty or illegal, then set to 1
			local latest_num = tonumber(ngx.var.arg_latestNum) or 1
			if latest_num<=0 then
				latest_num =1
			end
        	ngx.print(stats.get_reqnum_stats(latest_num))
        else
        	ngx.status = ngx.HTTP_NOT_FOUND
            ngx.say("request method not supported!")
            return ngx.exit(ngx.status)
        end
    }
}
